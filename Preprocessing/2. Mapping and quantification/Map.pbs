#PBS -l walltime=72:00:00
#PBS -l select=1:ncpus=48:mem=124gb:ompthreads=48

module load python
module load star

mkdir /Hs_STARindex #add location information

STAR --runThreadN 48 --runMode genomeGenerate --genomeDir /Hs_STARindex --genomeFastaFiles Homo_sapiens.GRCh38.dna.primary_assembly.fasta --sjdbGTFfile Homo_sapiens.GRCh38.104_IntronsFinalSorted.gff3 --sjdbGTFtagExonParentTranscript Parent --sjdbGTFtagExonParentGene Parent --genomeSAsparseD 2 --genomeSAindexNbases 11

echo $"Your genomes have been generated"

py_script_align="
import glob, os
file_list = []
os.chdir(r'') #add fastq read file location
for file in glob.glob('*.fastq.gz'):
    file_list.append(file)
file_list= sorted(file_list)
str1 = ' '.join(str(e) for e in file_list)
print(str1)
"
str1=$(python -c "$py_script_align")
b=( $str1 )

#STAR ALIGNMENT
for ((i=0;i< ${#b[@]} ;i+=2)); #please note thst this code is setup for paired-end read sample data
do
  neW_file_name_1=${b[i]/_1.fastq.gz/}
  echo ${b[i]}
  echo ${b[i+1]}
  cd #add output directory
  STAR --genomeDir /Hs_STARindex --runThreadN 48 --readFilesCommand zcat --readFilesIn ${b[i]} ${b[i+1]} --outFileNamePrefix $neW_file_name_1 --outSAMtype BAM SortedByCoordinate --runMode alignReads --outReadsUnmapped Fastx --outFilterMultimapNmax 1 --sjdbGTFtagExonParentTranscript Parent --sjdbGTFtagExonParentGene Parent #add read file location directory information before: ${b[i]} and ${b[i+1]}
  echo "----------------"
done
